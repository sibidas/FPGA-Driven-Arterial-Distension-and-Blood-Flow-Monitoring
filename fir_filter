`timescale 1ns / 1ps
module fir_filter(
    input wire clk,
    input wire rst,
    input wire [15:0] signal_in,
    output reg [15:0] filtered_out
);

    reg [15:0] delay_line[0:3];
    integer i;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            for (i = 0; i < 4; i = i + 1)
                delay_line[i] <= 0;
            filtered_out <= 0;
        end else begin
            delay_line[0] <= signal_in;
            for (i = 1; i < 4; i = i + 1)
                delay_line[i] <= delay_line[i-1];

            filtered_out <= (delay_line[0] + delay_line[1] + delay_line[2] + delay_line[3]) >> 2; // Average of 4 samples
        end
    end

endmodule
